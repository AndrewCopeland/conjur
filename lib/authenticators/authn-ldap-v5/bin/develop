#!/usr/bin/env ruby

require 'optparse'

options = {}

optparse = OptionParser.new do |opts|

  opts.banner = <<~EOS  
    With no options, starts up development containers but doesn't run tests.

    Otherwise, assumes containers are up, and runs specified tests.

    Usage: develop [options]"
  EOS

  options[:tests_to_run] = nil
  valid_types = %w(all rspec cukes)
  invalid_type_msg = "--test much be one of: #{valid_types.join(', ')}"

  opts.on(
    '-t',
    '--test [TESTS_TO_RUN]',
    "Which tests to run: [ #{valid_types.join(' | ')} ] (default: all)"
  ) do |type| 
    type = type.nil? ? 'all' : type # default no type to 'all'
    abort(invalid_type_msg) unless valid_types.include?(type)
    options[:tests_to_run] = type
  end

  options[:only] = ''
  opts.on(
    '-o',
    '--only FEATURE',
    'Run only 1 cucumber feature or test.  Eg: -o path/some.feature:3'
  ) { |feature| options[:only] = feature }

  options[:down] = nil
  opts.on(
    '-d',
    '--down',
    'Tear down all the containers and stop developing'
  ) { |feature| options[:down] = true }

  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
    exit
  end
end

optparse.parse!

def admin_api_key
  cmd = "echo $(docker-compose exec -T conjur-master " +
        "conjurctl role retrieve-key cucumber:user:admin | tr -d '\r')"
  %x(#{cmd}).chomp
end

def containers_up?
  required_containers = %w(conjur-master ldap-server authn-ldap)
  output = %x( docker-compose ps -q #{required_containers.join(' ')})
  output.split("\n").size == required_containers.size
end

def start_containers
  puts %x( cd #{__dir__}; ./start-containers )
end

def tear_down_containers
  puts 'Tearing down containers...'
  %x( set -ex; docker-compose down --rmi 'local' --volumes )
  exit
end

def run_tests(rspec: true, cukes: true, only: '')
  cuke_cmd  = cukes ? "bundle exec cucumber #{only}" : ''
  rspec_cmd = rspec ? "bundle exec rspec" : ''
  # only needed for cukes
  api_key   = cukes ? admin_api_key : ''

  puts %x( set -ex
    docker-compose run --rm \
    -e CONJUR_AUTHN_API_KEY=#{api_key} \
    test-container bash -c "
    #{rspec_cmd}
    #{cuke_cmd}
  ")
end

if options[:down]
  tear_down_containers
  exit
end

# start_containers unless containers_up?
start_containers unless options[:tests_to_run]

tests = options[:tests_to_run]
only = options[:only]
if tests
  run_tests(only: only)               if tests == 'all'
  run_tests(cukes: false, only: only) if tests == 'rspec'
  run_tests(rspec: false, only: only) if tests == 'cukes'
end
